#include <SoftwareSerial.h>

// Debug Mode (uncomment for debugging)
#define DEBUG

#ifdef DEBUG
  #define DEBUG_PRINT(x) Serial.print(x)
  #define DEBUG_PRINTLN(x) Serial.println(x)
#else
  #define DEBUG_PRINT(x)
  #define DEBUG_PRINTLN(x)
#endif

// HC-12 Module
#define HC12_RX_PIN 10  // HC-12 TX -> Arduino Pin 10
#define HC12_TX_PIN 11  // HC-12 RX -> Arduino Pin 11
SoftwareSerial HC12(HC12_TX_PIN, HC12_RX_PIN);

// System Parameters
const unsigned long SERIAL_TIMEOUT = 100; // ms
unsigned long lastAckTime = 0;
const unsigned long ACK_TIMEOUT = 1000; // ms

void setup() {
  #ifdef DEBUG
  Serial.begin(115200);
  while (!Serial); // Wait for Serial Monitor
  DEBUG_PRINTLN("Base Station Initializing...");
  #endif

  // Initialize HC-12
  HC12.begin(9600);
  HC12.setTimeout(SERIAL_TIMEOUT);

  #ifdef DEBUG
  DEBUG_PRINTLN("Base Station Ready");
  DEBUG_PRINTLN("Listening for data...");
  #endif
}

void loop() {
  // --- Forward Robot Data to MATLAB ---
  if (HC12.available() > 0) {
    String robotData = HC12.readStringUntil('\n');
    robotData.trim();

    if (robotData.startsWith("LAT:")) {
      // GPS Data
      Serial.println(robotData);
      DEBUG_PRINT("ROBOT->PC: ");
      DEBUG_PRINTLN(robotData);
    } 
    else if (robotData == "ACK") {
      // Acknowledgment
      lastAckTime = millis();
      DEBUG_PRINTLN("ACK received from robot");
    }
  }

  // --- Forward MATLAB Commands to Robot ---
  if (Serial.available() > 0) {
    String matlabCommand = Serial.readStringUntil('\n');
    matlabCommand.trim();

    // Only send if we got an ACK recently or it's our first command
    if (millis() - lastAckTime < ACK_TIMEOUT || lastAckTime == 0) {
      HC12.println(matlabCommand);
      DEBUG_PRINT("PC->ROBOT: ");
      DEBUG_PRINTLN(matlabCommand);
    } else {
      DEBUG_PRINTLN("WARNING: Not sending command - No recent ACK from robot");
    }
  }
}
